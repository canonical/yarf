[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yarf"
authors = [
    {name = "Hou Nam Chiang", email = "douglas.chiang@canonical.com"},
    {name = "MichaÅ‚ Sawicz", email = "michal.sawicz@canonical.com"},
    {name = "Paolo Gentili", email = "paolo.gentili@canonical.com"},
    {name = "Tim Andersson", email = "tim.andersson@canonical.com"}
]
description = """
Yet Another Robot Framework (YARF) is an interface that
allows developers to build complex test scenarios and
bootstrap them locally, then work towards automated runs.
"""
version = "1.1.2"
readme = "README.md"
requires-python = ">=3.10,<3.13"
dependencies = [
    "asyncvnc~=1.3.0",
    "onnxruntime~=1.21.1",
    "opencv-python~=4.11.0.86",
    "Pillow~=10.4.0",
    "pytesseract~=0.3.10",
    "pywayland",
    "rapidfuzz>=3.12.1",
    "rapidocr-onnxruntime>=1.4.4",
    "robotframework~=6.1.1",
    "robotframework-debug~=4.5.0",
    "robotframework-sshlibrary~=3.8.0",
    "rpaframework~=29.0.0",
    "rpaframework-recognition~=5.2.3",
    "rpyc~=5.3.1",
    "xkbcommon<1.1",
]

[project.optional-dependencies]
develop = [
    "mypy",
    "pre-commit<4.0.0",
    "pyfakefs",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "tox",
    "types-python-dateutil",
]

[project.scripts]
yarf = "yarf.main:main"

[tool.hatch.build]
exclude = [
  "docs",
  "tests",
]

[tool.hatch.build.hooks.custom]
dependencies = [
    "pywayland",
]

[tool.isort]
profile = "black"
line_length = 79

[tool.ruff]
line-length = 79
# In addition to the standard set of exclusions, omit all tests, plus a specific file.
extend-exclude = [
    "docs/*",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules --ignore=docs/ --ignore=hatch_build.py"
asyncio_default_fixture_loop_scope = "auto"
markers = [
    "output_size",
    "start_suite",
    "wayland_client",
    "wayland_globals",
]

[tool.coverage.run]
omit = [
    "hatch_build.py",
    "yarf/lib/wayland/protocols/*/*",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "pass",
    "continue",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage_html_report"
